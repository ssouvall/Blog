@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using RockwellBlog.Services
@inject IBlogImageService _blogImageService
@model IPagedList<Post>
@{
    ViewData["Title"] = "Search Results Page";
}

<div class="text-center mb-5">
    <h3 class="mb-3">CATEGORIES</h3>
    @if (User.Identity.IsAuthenticated)
    {
        <a class="btn btn-primary text-decoration-none" asp-controller="Blogs" asp-action="Create">Create New <i class="fas fa-plus"></i></a>
    }
</div>
<div class="row">
    <!--Model is the IEnumerable and blog is the instance of Model-->
    @foreach (var post in Model)
    {
        <div class="post-preview col-lg-4 col-md-6 col-sm-12">
            <div class="card mb-5">
                <img class="post-img img-fluid" src="@_blogImageService.DecodeImage(post.ImageData, post.ContentType)" alt="post image" />
                <div class="card-body">
                    <a asp-controller="Posts" asp-action="BlogPostIndex" asp-route-slug="@post.Slug">
                        <h3 class="card-title">@post.Title</h3>
                        <p class="post-subtitle card-text">@post.Abstract</p>
                        <p class="post-meta card-text">Posted by Stephen Souvall on @post.Created.ToString("MMM dd, yyyy")</p>
                    </a>
                    <div class="row">
                        <div class="col">
                            <a class="btn btn-primary text-center mt-5 d-flex align-items-center justify-content-center" asp-controller="Posts" asp-action="Details" asp-route-slug="@post.Slug">Read Details</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <hr />
    }
</div>

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchString = ViewData["SearchString"] }),
           new PagedListRenderOptions
           {
               LiElementClasses = new string[] { "page-item" },
               PageClasses = new string[] { "page-link" }
           }

      )
    </div>
</div>